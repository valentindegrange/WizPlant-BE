# Generated by Django 4.2.7 on 2023-11-03 14:50

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='PlantUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('phone_number', models.CharField(blank=True, max_length=20, null=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Plant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=50)),
                ('description', models.TextField(blank=True, null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='images/')),
                ('sunlight', models.CharField(choices=[('LIGHT_EXPOSURE', 'Light Exposure'), ('PARTIAL_SHADE', 'Partial Shade'), ('SHADE', 'Shade')], default='LIGHT_EXPOSURE', max_length=20)),
                ('sun_exposure', models.CharField(choices=[('DIRECT_SUN', 'Direct Sun'), ('NO_DIRECT_SUN', 'No Direct Sun')], default='DIRECT_SUN', max_length=20)),
                ('water_frequency_summer', models.IntegerField()),
                ('water_frequency_winter', models.IntegerField()),
                ('last_watered', models.DateField(blank=True, null=True)),
                ('leaf_mist', models.BooleanField(default=False)),
                ('fertilizer', models.BooleanField(default=False)),
                ('fertilizer_season', models.CharField(blank=True, choices=[('Spring', 'Spring'), ('Autumn', 'Autumn')], max_length=20, null=True)),
                ('last_fertilized', models.DateField(blank=True, null=True)),
                ('repotting', models.BooleanField(default=False)),
                ('repotting_season', models.CharField(blank=True, choices=[('Spring', 'Spring'), ('Autumn', 'Autumn')], max_length=20, null=True)),
                ('last_repotted', models.DateField(blank=True, null=True)),
                ('extra_tips', models.TextField(blank=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='NotificationCenter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('enable_email_notifications', models.BooleanField(default=False)),
                ('enable_sms_notifications', models.BooleanField(default=False)),
                ('preferred_notification_hour', models.IntegerField(default=9)),
                ('last_notification_sent', models.DateField(blank=True, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('message', models.TextField()),
                ('notification_type', models.CharField(choices=[('EMAIL', 'Email'), ('SMS', 'SMS'), ('IN_APP', 'In-App')], default='IN_APP', max_length=20)),
                ('sent', models.BooleanField(default=False)),
                ('sent_at', models.DateField(auto_now_add=True)),
                ('viewed', models.BooleanField(default=False)),
                ('viewed_at', models.DateTimeField(blank=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
